{"ast":null,"code":"var _jsxFileName = \"E:\\\\My Projects\\\\react-demo\\\\routing\\\\src\\\\components\\\\PeopleList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'https://swapi.dev/api/people';\nexport default function PeopleList() {\n  _s();\n  const [people, setPeople] = useState([]);\n  useEffect(() => {\n    fetch(baseUrl).then(res => res.json()).then(data => setPeople(data.results));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"People List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: people.map(x => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: x.name\n      }, x.url, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(PeopleList, \"iLHt2u73MC8pQH7JexuLSo07ahk=\");\n_c = PeopleList;\nvar _c;\n$RefreshReg$(_c, \"PeopleList\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","baseUrl","PeopleList","_s","people","setPeople","fetch","then","res","json","data","results","children","fileName","_jsxFileName","lineNumber","columnNumber","map","x","name","url","_c","$RefreshReg$"],"sources":["E:/My Projects/react-demo/routing/src/components/PeopleList.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nconst baseUrl = 'https://swapi.dev/api/people';\r\n\r\nexport default function PeopleList() {\r\n    const [people, setPeople] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(baseUrl)\r\n            .then(res => res.json())\r\n            .then(data => setPeople(data.results))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>People List</h1>\r\n            <ul>\r\n                {people.map(x => <li key={x.url}>{x.name}</li>)}\r\n            </ul>\r\n        </>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,OAAO,GAAG,8BAA8B;AAE9C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZU,KAAK,CAACL,OAAO,CAAC,CACTM,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIL,SAAS,CAACK,IAAI,CAACC,OAAO,CAAC,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBlB,OAAA;MAAAc,QAAA,EACKR,MAAM,CAACa,GAAG,CAACC,CAAC,iBAAIpB,OAAA;QAAAc,QAAA,EAAiBM,CAAC,CAACC;MAAI,GAAdD,CAAC,CAACE,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA,eACP,CAAC;AAEX;AAACb,EAAA,CAlBuBD,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}