{"ast":null,"code":"var _jsxFileName = \"E:\\\\My Projects\\\\react-demo\\\\routing\\\\src\\\\components\\\\PersonMovies.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'https://swapi.dev/api/films';\nexport default function MoviesList() {\n  _s();\n  const {\n    personId\n  } = useParams();\n\n  // Since the api doen't provide user movies request we take all movies\n  useEffect(() => {\n    fetch(baseUrl).then(res => res.json()).then(data => console.log(data));\n  }, [personId]);\n  console.log(personId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Person movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(MoviesList, \"BkehZ4rhdbRDYpE6wv3LkemXZiI=\", false, function () {\n  return [useParams];\n});\n_c = MoviesList;\nvar _c;\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["useEffect","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","baseUrl","MoviesList","_s","personId","fetch","then","res","json","data","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/My Projects/react-demo/routing/src/components/PersonMovies.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst baseUrl = 'https://swapi.dev/api/films'\r\n\r\nexport default function MoviesList() {\r\n    const { personId } = useParams();\r\n\r\n    // Since the api doen't provide user movies request we take all movies\r\n    useEffect(() => {\r\n        fetch(baseUrl)\r\n            .then(res => res.json())\r\n            .then(data => console.log(data))\r\n    }, [personId]);\r\n\r\n    console.log(personId);\r\n\r\n    return (\r\n        <>\r\n            <h2>Person movies</h2>\r\n        </>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,OAAO,GAAG,6BAA6B;AAE7C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAS,CAAC,GAAGR,SAAS,CAAC,CAAC;;EAEhC;EACAD,SAAS,CAAC,MAAM;IACZU,KAAK,CAACJ,OAAO,CAAC,CACTK,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;EACxC,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEdM,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;EAErB,oBACIN,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACId,OAAA;MAAAc,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC,gBACxB,CAAC;AAEX;AAACb,EAAA,CAjBuBD,UAAU;EAAA,QACTN,SAAS;AAAA;AAAAqB,EAAA,GADVf,UAAU;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}